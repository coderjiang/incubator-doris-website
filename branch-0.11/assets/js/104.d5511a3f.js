(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{490:function(t,e,n){"use strict";n.r(e);var a=n(43),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"get-json-int"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#get-json-int"}},[t._v("#")]),t._v(" get_json_int")]),t._v(" "),n("h2",{attrs:{id:"description"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[t._v("#")]),t._v(" Description")]),t._v(" "),n("h3",{attrs:{id:"syntax"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),n("p",[t._v("'I don't get you int (VARCHAR is on, VARCHAR is on the path)")]),t._v(" "),n("p",[t._v('Parse and retrieve the integer content of the specified path in the JSON string.\nWhere json_path must start with the $symbol and use. as the path splitter. If the path contains..., double quotation marks can be used to surround it.\nUse [] to denote array subscripts, starting at 0.\nThe content of path cannot contain ",[and].\nIf the json_string format is incorrect, or the json_path format is incorrect, or matches cannot be found, NULL is returned.')]),t._v(" "),n("h2",{attrs:{id:"example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" example")]),t._v(" "),n("ol",[n("li",[t._v('Get the value of key as "k1"')])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('mysql > SELECT get json u int (\'{"k1":1, "k2":"2"}, "$.k1");\n+--------------------------------------------+\nGet it on int (\'{"k1":1, "k2":"2"},\'$.k1\') 124s;\n+--------------------------------------------+\n|                                          1 |\n+--------------------------------------------+\n')])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v('Get the second element of the array whose key is "my. key"')])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('mysql > SELECT get u json u int (\'{"k1":"v1", "my.key":[1, 2, 3]}\',\'$"my.key"[1]);\n+------------------------------------------------------------------+\nGet me on int (\'{"k1":"v1", "my.key":[1, 2, 3]}\',\'$"my.key"[1]])\'124;\n+------------------------------------------------------------------+\n|                                                                2 |\n+------------------------------------------------------------------+\n')])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("Get the first element in an array whose secondary path is k1. key - > K2")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('mysql > SELECT get u json u int (\'{"k1.key":{"k2":[1, 2]}\',\'$"k1.key".k2 [0]\');\n+--------------------------------------------------------------+\nGet me on int (\'{"k1.key":{"k2":[1, 2]}\',\'$"k1.key".k2 [0]) 1244;\n+--------------------------------------------------------------+\n|                                                            1 |\n+--------------------------------------------------------------+\n')])])]),n("p",[t._v("##keyword\nGET_JSON_INT,GET,JSON,INT")])])}),[],!1,null,null,null);e.default=s.exports}}]);